input {
  http {
    port => "${PORT}"
    user => "${USER}"
    password => "${PASSWORD}"
    codec => plain {
      charset => "UTF-8"
      ecs_compatibility => "v1"
    }
  }
}

filter {
  # Extraire les champs depuis le message brut
  grok {
    match => {
      "message" => "method=%{NOTSPACE:method} path=%{QUOTEDSTRING:path} host=%{NOTSPACE:host} request_id=%{NOTSPACE:request_id} container=%{NOTSPACE:container} from=%{QUOTEDSTRING:ip} protocol=%{NOTSPACE:protocol} status=%{NUMBER:status} duration=%{NOTSPACE:duration} bytes=%{NUMBER:bytes} referer=%{QUOTEDSTRING:referer} user_agent=%{QUOTEDSTRING:user_agent}"
    }
    target => "[logstash]"
  }

  # Extraire les query params depuis le champ path
  if [logstash][path] {
    kv {
      source => "[logstash][path]"
      field_split => "&"
      trim_key => "?"
      target => "[logstash][url_params]"
    }
  }

  # Nettoyer
  mutate {
    remove_field => ["headers", "message"]
    rename => {
      "[logstash][url_params][appname]" => "[logstash][source]"
      "[logstash][url_params][hostname]" => "[logstash][container]"
    }
  }
}

output {
  if ([logstash][source] == "dev-pilote-ditp") {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOST}"
      user => "${ELASTICSEARCH_USER}"
      password => "${ELASTICSEARCH_PASSWORD}"
      index => "pilote-dev-%{+YYYY.MM.dd}"
      ilm_policy => "pilote_policy"
      ilm_enabled => true
      manage_template => false
    }
  } else if ([logstash][source] == "prod-pilote-ditp") {
    elasticsearch {
      hosts => "${ELASTICSEARCH_HOST}"
      user => "${ELASTICSEARCH_USER}"
      password => "${ELASTICSEARCH_PASSWORD}"
      index => "pilote-prod-%{+YYYY.MM.dd}"
      ilm_policy => "pilote_policy"
      ilm_enabled => true
      manage_template => false
    }
  }

  stdout {
    codec => rubydebug
  }
}
